{"version":3,"file":"index.test.js","sourceRoot":"","sources":["../../tests/index.test.ts"],"names":[],"mappings":"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","sourcesContent":["import { expect } from 'chai'\nimport * as fs from 'fs'\nimport 'mocha'\nimport * as sinon from 'sinon'\nimport {validResponse, errorResponse} from './response'\nimport { OpenStreelMapReverseGeoError } from '../Error';\nimport { ReverseGeocoder } from '..';\n\nlet stub: sinon.SinonStub\nlet stub2: sinon.SinonStub\n\nconst geo = new ReverseGeocoder('0', '0')\nconst geo2 = new ReverseGeocoder('1', '1')\n\ndescribe('Test MailBoxLayer class', () => {\n    beforeEach( async () => {\n        stub = sinon.stub(geo, 'getRequest').resolves(validResponse)\n        stub2 = sinon.stub(geo2, 'getRequest').resolves(validResponse)\n    })\n\n    afterEach(() => {\n        stub.restore()\n        stub2.restore()\n    })\n\n    it('should throw error if lat or lng is not valid', async () => {\n        let error: OpenStreelMapReverseGeoError = new OpenStreelMapReverseGeoError()\n        try {\n            new ReverseGeocoder('-200', '0')\n        } catch (err) {\n            error = err\n        }\n        expect(error.message).to.eql('Latitude is not valid')\n\n        try {\n            new ReverseGeocoder('0', '-200')\n        } catch (err) {\n            error = err\n        }\n        expect(error.message).to.eql('Longitude is not valid')\n\n        try {\n            new ReverseGeocoder('-200', '-200')\n        } catch (err) {\n            error = err\n        }\n        expect(error.message).to.eql('Latitude is not valid')\n    })\n\n    it('should throw error if api send error', async () => {\n        stub.restore()\n        stub = sinon.stub(geo, 'getRequest').resolves(errorResponse)\n\n        let error = new OpenStreelMapReverseGeoError()\n\n        try {\n            await geo.getReverse()\n        } catch (err) {\n            error = err\n        }\n\n        expect(error.message).to.eql('Nop')\n    })\n\n    it('should return add to cache by default', async () => {\n       let result = await  geo.getReverse()\n       expect(result.fromCache).to.be.false\n       result = await  geo.getReverse()\n       expect(result.fromCache).to.be.true\n       result = await geo2.getReverse()\n       expect(result.fromCache).to.be.false\n       result = await  geo2.getReverse()\n       expect(result.fromCache).to.be.true\n    })\n\n    it('should not add in cache if disabled', async () => {\n        geo.disableCache()\n        let result = await  geo.getReverse()\n        expect(result.fromCache).to.be.false\n        result = await  geo.getReverse()\n        expect(result.fromCache).to.be.false\n        geo.enableCache()\n    })\n\n    it('should return the response', async () => {\n        const result = await geo.getReverse()\n        expect( result.displayName).to.eql(validResponse.display_name)\n        expect( result.lat).to.eql(validResponse.lat)\n        expect( result.lng).to.eql(validResponse.lon)\n        expect( result.latInput).to.eql('0')\n        expect( result.lngInput).to.eql('0')\n        expect(result.placeId).to.eql(validResponse.place_id)\n        expect(validResponse.address.city).to.eql(result.address.city)\n        expect(validResponse.address.country).to.eql(result.address.country)\n        expect(validResponse.address.country_code).to.eql(result.address.countryCode)\n        expect(validResponse.address.county).to.eql(result.address.county)\n        expect(validResponse.address.pedestrian).to.eql(result.address.pedestrian)\n        expect(validResponse.address.postcode).to.eql(result.address.postcode)\n        expect(validResponse.address.state).to.eql(result.address.state)\n        expect(validResponse.address.suburb).to.eql(result.address.suburb)\n        expect(validResponse.address.theatre).to.eql(result.address.theatre)\n    })\n\n})\n"]}